import express from "express";
import events from "../model/events.js";

const eventsRouter = express.Router();

eventsRouter.route("/add").post((req,res)=>{
    

    //body 
    const name = req.body.name;
    const description= req.body.description;
    const location= req.body.location;
    const price=Number(req.body.price);
    const time=Number(req.body.time);
    const category= req.body.category;
    const organizerName= req.body.organizerName;
    const organizerContact= req.body.organizerContact;
    const ticketAvailability= req.body.ticketAvailability;


    const newEvent = new events({

        name,
        description,
        location,
        price,
        time,
        category,
        organizerName,
        organizerContact,
        ticketAvailability


    })

    newEvent.save().then(()=>{
        //body
        res.json("New Event added");
    }).catch((err)=>{
        console.log(err);
    })

})


eventsRouter.route("/").get((req,res)=>{

    events.find().then((event_s)=>{
        res.json(event_s)
    }).catch((err)=>{
        console.log(err)
})
})


eventsRouter.route("/update/:id").put(async(req,res)=>{
    let eventID=req.params.id;
    const{   name,description,location,price,time, category, organizerName,organizerContact,ticketAvailability} =req.body;

    const updateEvents ={
      
        name,
        description,
        location,
        price,
        time,
        category,
        organizerName,
        organizerContact,
        ticketAvailability
    }

    const update = await events.findByIdAndUpdate(eventID,updateEvents)
    .then(()=>{
        res.status(200).send({status:"Event information updated"})
    }).catch((err)=>{
        console.log(err);
        res.status(500).send({status: "Error with updating data",error:err.message});

    })


})


eventsRouter.route("/delete/:id").delete(async(req,res)=>{
    let eventID =req.params.id;

    await events.findByIdAndDelete(eventID)
    .then(() =>{
      res.status(200).send({status: "Event deleted"});
    }).catch((err)=>{
        console.log(err.message);
        res.status(500).send({status: "Error with deleting data",error:err.message});

    })
})

//get only one users data
eventsRouter.route("/get/:id").get(async (req,res) =>{
    let eventID = req.params.id;
    const event_s=await events.findById(eventID)
      .then((deli)=>{
         res.status(200).send({status:"Event  selected",deli})
    }).catch((err) =>  {
        console.log(err.messsage);
        res.status(500).send({status:"Error",error:err.message});
    }   )
})

export default  eventsRouter;